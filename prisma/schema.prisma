datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Language {
  id          String        @id @default(cuid())
  name        String
  TextContent TextContent[]
  Translation Translation[]
}

model TextContent {
  id               String        @id @default(cuid())
  originalText     String
  originalLanguage Language      @relation(fields: [languageId], references: [id])
  languageId       String
  translation      Translation[]
  ProductTag       ProductTag[]
  ServiceName      Service[]     @relation("service-name")
  ServiceDesc      Service[]     @relation("service-description")
}

model Translation {
  textContent   TextContent @relation(fields: [textContentId], references: [id])
  textContentId String
  language      Language    @relation(fields: [languageId], references: [id])
  languageId    String
  text          String

  @@unique([languageId, textContentId])
}

model ProductTag {
  id            String      @id @default(cuid())
  textContent   TextContent @relation(fields: [textContentId], references: [id])
  textContentId String
  Product       Product?    @relation(fields: [productId], references: [id])
  productId     String?
}

model Product {
  id   String       @id
  tags ProductTag[]
}

model Service {
  id            String       @id @default(cuid())
  name          TextContent? @relation("service-name", fields: [nameId], references: [id])
  nameId        String       @unique
  description   TextContent? @relation("service-description", fields: [descriptionId], references: [id])
  descriptionId String       @unique
}
